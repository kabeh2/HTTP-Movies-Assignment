{"version":3,"sources":["Movies/SavedList.js","Movies/MovieCard.js","Movies/MovieList.js","Movies/Movie.js","Movies/forms/TextInput.jsx","Movies/forms/MyFieldArray.jsx","Movies/forms/UpdateForm.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","color","menuButton","marginRight","spacing","toolbar","alignItems","paddingTop","paddingBottom","title","borderColor","SavedList","props","classes","className","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","list","map","movie","to","id","key","activeClassName","Button","MovieCard","director","metascore","stars","star","MovieList","state","movies","fetchData","bind","this","axios","get","then","res","setState","data","catch","err","console","log","response","CssBaseline","Container","maxWidth","MovieDetails","PureComponent","Movie","fetchMovie","deleteMovie","delete","window","location","error","message","saveMovie","addToSavedList","match","params","newProps","Grid","item","container","style","width","Box","display","justifyContent","onClick","pathname","React","Component","flexWrap","textField","marginBottom","TextInput","label","useField","field","meta","TextField","helperText","touched","MyFieldArray","values","name","render","arrayHelpers","length","index","InputProps","endAdornment","InputAdornment","size","remove","Fab","push","margin","card","flexDirection","marginBtns","footerMargin","marginTop","borderTop","UpdateForm","history","direction","justify","Card","CardContent","gutterBottom","initialValues","Date","now","validationSchema","Yup","max","required","min","of","onSubmit","a","async","setSubmitting","setErrors","setStatus","resetForm","put","post","success","replace","submit","type","placeholder","goBack","App","useState","savedList","setSavedList","path","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.49bf80c9.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TheatersOutlinedIcon from \"@material-ui/icons/TheatersOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    color: \"white\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  toolbar: {\n    alignItems: \"flex-center\",\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1,\n    color: \"white\",\n    borderColor: \"white\"\n  }\n}));\n\nconst SavedList = props => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar className={classes.toolbar}>\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\">\n              <TheatersOutlinedIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h5\" noWrap>\n              Saved Movies:\n            </Typography>\n            {props.list.map(movie => {\n              return (\n                <NavLink\n                  to={`/movies/${movie.id}`}\n                  key={movie.id}\n                  activeClassName=\"saved-active\"\n                >\n                  <Button className={classes.title} variant=\"outlined\">\n                    {movie.title}\n                  </Button>\n                </NavLink>\n              );\n            })}\n            <Link to=\"/add-movie\">\n              <IconButton aria-label=\"add\" className={classes.root}>\n                <AddIcon />\n              </IconButton>\n            </Link>\n\n            <Link to=\"/\">\n              <IconButton aria-label=\"home\" edge=\"end\" className={classes.root}>\n                <HomeIcon />\n              </IconButton>\n            </Link>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </>\n  );\n};\n\nexport default SavedList;\n","import React from \"react\";\n\nconst MovieCard = props => {\n  const { title, director, metascore, stars } = props.movie;\n\n  return (\n    <div className=\"movie-card\">\n      <h2>{title}</h2>\n      <div className=\"movie-director\">\n        Director: <em>{director}</em>\n      </div>\n      <div className=\"movie-metascore\">\n        Metascore: <strong>{metascore}</strong>\n      </div>\n      <h3>Actors</h3>\n\n      {stars.map(star => (\n        <div key={star} className=\"movie-star\">\n          {star}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React, { PureComponent } from \"react\";\nimport axios from \"axios\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link } from \"react-router-dom\";\nimport MovieCard from \"./MovieCard\";\n\nexport default class MovieList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    axios\n      .get(\"http://localhost:5000/api/movies\")\n      .then(res => this.setState({ movies: res.data }))\n      .catch(err => console.log(err.response));\n  }\n\n  render() {\n    return (\n      <>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <div className=\"movie-list\">\n            {this.state.movies.map(movie => (\n              <MovieDetails key={movie.id} movie={movie} />\n            ))}\n          </div>\n        </Container>\n      </>\n    );\n  }\n}\n\nfunction MovieDetails({ movie }) {\n  return (\n    <Link to={`/movies/${movie.id}`}>\n      <MovieCard movie={movie} />\n    </Link>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@material-ui/core\";\nimport MovieCard from \"./MovieCard\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default class Movie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMovie(this.props.match.params.id);\n    console.log(\"MATCH\", this.props);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (this.props.match.params.id !== newProps.match.params.id) {\n      this.fetchMovie(newProps.match.params.id);\n    }\n  }\n\n  fetchMovie = id => {\n    axios\n      .get(`http://localhost:5000/api/movies/${id}`)\n      .then(res => {\n        this.setState({ movie: res.data });\n        console.log(\"State\", this.state);\n        console.log(\"Props\", this.props);\n      })\n      .catch(err => console.log(err.response));\n  };\n\n  deleteMovie = id => {\n    try {\n      axios.delete(`http://localhost:5000/api/movies/${id}`);\n      window.location = \"/\";\n      // this.props.history.replace(\"/\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  saveMovie = () => {\n    const addToSavedList = this.props.addToSavedList;\n    addToSavedList(this.state.movie);\n  };\n\n  render() {\n    if (!this.state.movie) {\n      return <div>Loading movie information...</div>;\n    }\n\n    return (\n      <div className=\"save-wrapper\">\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <MovieCard movie={this.state.movie} />\n\n          <Grid item container spacing={1}>\n            <div style={{ width: \"100%\" }}>\n              <Box display=\"flex\" justifyContent=\"space-between\">\n                <Grid item>\n                  <Button\n                    variant=\"outlined\"\n                    onClick={this.saveMovie}\n                    color=\"primary\"\n                  >\n                    Save\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Link\n                    to={{\n                      pathname: `/update-movie/${this.props.match.params.id}`,\n                      state: {\n                        movie: this.state.movie\n                      }\n                    }}\n                  >\n                    <Button variant=\"contained\" color=\"primary\">\n                      Update\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => this.deleteMovie(this.state.movie.id)}\n                  >\n                    Delete\n                  </Button>\n                </Grid>\n              </Box>\n            </div>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useField } from \"formik\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n    width: 320\n  }\n}));\n\nconst TextInput = ({ label, ...props }) => {\n  const classes = useStyles();\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and also replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      {/* <label htmlFor={props.id || props.name}>{label}</label> */}\n      <TextField\n        error={meta.error && true}\n        // id=\"standard-error-helper-text\"\n        helperText={meta.touched && meta.error ? meta.error : null}\n        label={label}\n        className={`text-input ${classes.textField}`}\n        {...field}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport { FieldArray } from \"formik\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextInput from \"./TextInput\";\n\nfunction MyFieldArray({ values, name }) {\n  return (\n    <FieldArray\n      name={name}\n      render={arrayHelpers => (\n        <div>\n          {values.stars && values.stars.length > 0 ? (\n            values.stars.map((star, index) => (\n              <div key={index}>\n                <TextInput\n                  name={`stars.${index}`}\n                  label=\"Add Actor\"\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          size=\"small\"\n                          color=\"secondary\"\n                          aria-label=\"delete\"\n                          onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </div>\n            ))\n          ) : (\n            <TextInput\n              name={`stars.0`}\n              label=\"Add Actor\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      size=\"small\"\n                      color=\"secondary\"\n                      aria-label=\"delete\"\n                      onClick={() => arrayHelpers.remove(0)} // remove a friend from the list\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n            />\n          )}\n\n          <Fab\n            size=\"small\"\n            aria-label=\"Add Actor\"\n            variant=\"extended\"\n            color=\"secondary\"\n            onClick={() => arrayHelpers.push(\"\")}\n          >\n            <AddIcon />\n            Add an Actor\n          </Fab>\n        </div>\n      )}\n    />\n  );\n}\n\nexport default MyFieldArray;\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextInput from \"./TextInput\";\nimport MyFieldArray from \"./MyFieldArray\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      flexGrow: 1\n    }\n  },\n  card: {\n    maxWidth: \"min-content\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  marginBtns: {\n    marginRight: theme.spacing(1)\n  },\n  footerMargin: {\n    marginTop: theme.spacing(3),\n    paddingTop: theme.spacing(2),\n    borderTop: `1px solid #f4f4f4`\n  }\n}));\n\nconst UpdateForm = ({ location, history }) => {\n  const classes = useStyles();\n\n  console.log(\"PROPS\", history, location);\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={3}\n      >\n        <Card className={classes.card}>\n          <CardContent className={classes.card}>\n            <Grid item>\n              <Typography variant=\"h4\" gutterBottom>\n                {location.state ? \"Update Movie\" : \"Add Movie\"}\n              </Typography>\n            </Grid>\n            <Grid item container>\n              <Formik\n                initialValues={{\n                  id: location.state ? location.state.movie.id : Date.now(),\n                  title: location.state ? location.state.movie.title : \"\",\n                  director: location.state ? location.state.movie.director : \"\",\n                  metascore: location.state\n                    ? location.state.movie.metascore\n                    : \"\",\n                  stars: location.state ? [...location.state.movie.stars] : []\n                }}\n                validationSchema={Yup.object({\n                  title: Yup.string()\n                    .max(30, \"Must be 30 characters or less\")\n                    .required(\"Required\"),\n                  director: Yup.string()\n                    .max(30, \"Must be 30 characters or less\")\n                    .required(\"Required\"),\n                  metascore: Yup.number()\n                    .min(0, \"Muse be a number higher than 0\")\n                    .required(\"Required\"),\n                  stars: Yup.array().of(\n                    Yup.string()\n                      .max(30, \"Must be 30 characters or less\")\n                      .required(\"At least one star name is Required.\")\n                  )\n                })}\n                onSubmit={async (\n                  values,\n                  { setSubmitting, setErrors, setStatus, resetForm }\n                ) => {\n                  try {\n                    location.state\n                      ? await axios.put(\n                          `http://localhost:5000/api/movies/${location.state.movie.id}`,\n                          values\n                        )\n                      : await axios.post(\n                          `http://localhost:5000/api/movies/`,\n                          values\n                        );\n                    resetForm({});\n                    setStatus({ success: true });\n                    history.replace(\n                      location.state\n                        ? `/movies/${location.state.movie.id}`\n                        : \"/\"\n                    );\n                  } catch (error) {\n                    setStatus({ success: false });\n                    setSubmitting(false);\n                    setErrors({ submit: error.message });\n                  }\n                }}\n              >\n                {({ values }) => (\n                  <Form>\n                    <TextInput\n                      label=\"Movie Title\"\n                      name=\"title\"\n                      type=\"text\"\n                      placeholder=\"Movie Title...\"\n                    />\n                    <TextInput\n                      label=\"Movie Director\"\n                      name=\"director\"\n                      type=\"text\"\n                      placeholder=\"Movie Director...\"\n                    />\n                    <TextInput\n                      label=\"Metascore\"\n                      name=\"metascore\"\n                      type=\"text\"\n                      placeholder=\"Metascore...\"\n                    />\n                    <MyFieldArray name=\"stars\" values={values} />\n\n                    <Grid\n                      item\n                      container\n                      spacing={1}\n                      className={classes.footerMargin}\n                    >\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          onClick={() => history.goBack()}\n                        >\n                          Cancel\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          type=\"submit\"\n                        >\n                          {location.state ? \"Update\" : \"Submit\"}\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                )}\n              </Formik>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </div>\n  );\n};\n\nexport default UpdateForm;\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SavedList from \"./Movies/SavedList\";\nimport MovieList from \"./Movies/MovieList\";\nimport Movie from \"./Movies/Movie\";\nimport UpdateForm from \"./Movies/forms/UpdateForm\";\n\nconst App = () => {\n  const [savedList, setSavedList] = useState([]);\n\n  const addToSavedList = movie => {\n    setSavedList([...savedList, movie]);\n  };\n\n  return (\n    <>\n      <SavedList list={savedList} />\n      <Switch>\n        <Route\n          path=\"/update-movie/:id?\"\n          render={props => {\n            return <UpdateForm {...props} />;\n          }}\n        />\n        <Route\n          path=\"/add-movie/\"\n          render={props => {\n            return <UpdateForm {...props} />;\n          }}\n        />\n        <Route\n          path=\"/movies/:id\"\n          render={props => {\n            return <Movie {...props} addToSavedList={addToSavedList} />;\n          }}\n        />\n        <Route exact path=\"/\" component={MovieList} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}